name: CI/CD Pipeline

on:
 push:
  branches:
   - stg
   - main
 pull_request:
  branches:
   - stg
   - main

# ワークフロー全体の権限設定
permissions:
 contents: read # コードの読み取り権限
 pages: write # GitHub Pagesへの書き込み権限
 id-token: write # OIDCトークン発行に必要な権限（ここが重要！）

jobs:
 # ステージング環境（Netlify）へのデプロイジョブ
 deploy_staging:
  if: (github.event_name == 'push' && github.ref == 'refs/heads/stg') || (github.event_name == 'pull_request' && github.base_ref == 'stg')
  runs-on: ubuntu-latest
  environment: Netlify-Staging

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Set up Node.js
     uses: actions/setup-node@v4
     with:
      node-version: '20'

   - name: Install dependencies
     run: npm ci

   - name: Build site for Staging
     run: npm run build

   - name: Install Netlify CLI
     run: npm install netlify-cli -g

   - name: Deploy to Netlify Staging
     run: netlify deploy --prod --dir=dist
     env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN_STG }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_STG }}

 # 本番環境（GitHub Pages）へのデプロイジョブ
 deploy_production_gh_pages:
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  runs-on: ubuntu-latest
  environment:
   name: github-pages
   url: ${{ steps.deployment.outputs.page_url }}

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Set up Node.js
     uses: actions/setup-node@v4
     with:
      node-version: '20'

   - name: Install dependencies
     run: npm ci

   - name: Build site for Production
     env:
      NODE_ENV: production
     run: npm run build

   - name: Upload artifact for GitHub Pages
     uses: actions/upload-pages-artifact@v3
     with:
      path: dist

   - name: Deploy to GitHub Pages
     id: deployment
     uses: actions/deploy-pages@v4
